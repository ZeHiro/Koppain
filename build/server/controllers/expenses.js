// Generated by CoffeeScript 1.6.3
var Balance, Expense;

Expense = require('../models/expense');

Balance = require('../models/balance');

module.exports.addexpense = function(req, res) {
  var expense;
  expense = req.body;
  return Balance.exists(req.params.balanceID, function(err, IsExist) {
    if (err != null) {
      res.status(500).send({
        error: "server_error: " + err
      });
    } else if (!IsExist) {
      res.status(404).send({
        error: "balance_not_found"
      });
    } else {
      expense.balanceId = req.params.balanceID;
      return Expense.create(expense, function(err, expense) {
        if (err != null) {
          res.status(500).send({
            error: "server_error: " + err
          });
        } else {
          return res.sendStatus(201);
        }
      });
    }
  });
};

module.exports.updateexpense = function(req, res) {
  var expense;
  expense = req.body;
  return Expense.exists(req.params.expenseID, function(err, IsExist) {
    if (err != null) {
      res.status(500).send({
        error: "server_error: " + err
      });
    } else if (!IsExist) {
      return res.status(404).send({
        error: "expense_not_found"
      });
    }
  });
};

module.exports.deleteexpense = function(req, res) {
  return Expense.exists(req.params.expenseID, function(err, IsExist) {
    if (err != null) {
      res.status(500).send({
        error: "server_error: " + err
      });
    } else if (!IsExist) {
      res.status(404).send({
        error: "expense_not_found"
      });
    } else {
      return Expense.destroy(req.params.expenseID, function(err) {
        if (err != null) {
          res.status(500).send({
            error: "server_error: " + err
          });
        } else {
          return res.sendStatus(204);
        }
      });
    }
  });
};

module.exports.getAllbyBalanceID = function(req, res) {
  return Balance.exists(req.params.balanceID, function(err, IsExist) {
    if (err != null) {
      res.status(500).send({
        error: "server_error: " + err
      });
    } else if (!IsExist) {
      res.status(404).send({
        error: "balance_not_found"
      });
    } else {
      return Expense.allByBalanceID(req.params.balanceID, function(err, expenses) {
        if (err != null) {
          res.status(500).send({
            error: "server_error: " + err
          });
        } else {
          return res.status(200).send(expenses);
        }
      });
    }
  });
};
